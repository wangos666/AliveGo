{"ast":null,"code":"const readWasm = require(\"../lib/read-wasm\");\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\n\n\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.lastGeneratedColumn = null;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\nlet cachedWasm = null;\n\nmodule.exports = function wasm() {\n  if (cachedWasm) {\n    return cachedWasm;\n  }\n\n  const callbackStack = [];\n  cachedWasm = readWasm().then(buffer => {\n    return WebAssembly.instantiate(buffer, {\n      env: {\n        mapping_callback(generatedLine, generatedColumn, hasLastGeneratedColumn, lastGeneratedColumn, hasOriginal, source, originalLine, originalColumn, hasName, name) {\n          const mapping = new Mapping(); // JS uses 1-based line numbers, wasm uses 0-based.\n\n          mapping.generatedLine = generatedLine + 1;\n          mapping.generatedColumn = generatedColumn;\n\n          if (hasLastGeneratedColumn) {\n            // JS uses inclusive last generated column, wasm uses exclusive.\n            mapping.lastGeneratedColumn = lastGeneratedColumn - 1;\n          }\n\n          if (hasOriginal) {\n            mapping.source = source; // JS uses 1-based line numbers, wasm uses 0-based.\n\n            mapping.originalLine = originalLine + 1;\n            mapping.originalColumn = originalColumn;\n\n            if (hasName) {\n              mapping.name = name;\n            }\n          }\n\n          callbackStack[callbackStack.length - 1](mapping);\n        },\n\n        start_all_generated_locations_for() {\n          console.time(\"all_generated_locations_for\");\n        },\n\n        end_all_generated_locations_for() {\n          console.timeEnd(\"all_generated_locations_for\");\n        },\n\n        start_compute_column_spans() {\n          console.time(\"compute_column_spans\");\n        },\n\n        end_compute_column_spans() {\n          console.timeEnd(\"compute_column_spans\");\n        },\n\n        start_generated_location_for() {\n          console.time(\"generated_location_for\");\n        },\n\n        end_generated_location_for() {\n          console.timeEnd(\"generated_location_for\");\n        },\n\n        start_original_location_for() {\n          console.time(\"original_location_for\");\n        },\n\n        end_original_location_for() {\n          console.timeEnd(\"original_location_for\");\n        },\n\n        start_parse_mappings() {\n          console.time(\"parse_mappings\");\n        },\n\n        end_parse_mappings() {\n          console.timeEnd(\"parse_mappings\");\n        },\n\n        start_sort_by_generated_location() {\n          console.time(\"sort_by_generated_location\");\n        },\n\n        end_sort_by_generated_location() {\n          console.timeEnd(\"sort_by_generated_location\");\n        },\n\n        start_sort_by_original_location() {\n          console.time(\"sort_by_original_location\");\n        },\n\n        end_sort_by_original_location() {\n          console.timeEnd(\"sort_by_original_location\");\n        }\n\n      }\n    });\n  }).then(Wasm => {\n    return {\n      exports: Wasm.instance.exports,\n      withMappingCallback: (mappingCallback, f) => {\n        callbackStack.push(mappingCallback);\n\n        try {\n          f();\n        } finally {\n          callbackStack.pop();\n        }\n      }\n    };\n  }).then(null, e => {\n    cachedWasm = null;\n    throw e;\n  });\n  return cachedWasm;\n};","map":{"version":3,"names":["readWasm","require","Mapping","generatedLine","generatedColumn","lastGeneratedColumn","source","originalLine","originalColumn","name","cachedWasm","module","exports","wasm","callbackStack","then","buffer","WebAssembly","instantiate","env","mapping_callback","hasLastGeneratedColumn","hasOriginal","hasName","mapping","length","start_all_generated_locations_for","console","time","end_all_generated_locations_for","timeEnd","start_compute_column_spans","end_compute_column_spans","start_generated_location_for","end_generated_location_for","start_original_location_for","end_original_location_for","start_parse_mappings","end_parse_mappings","start_sort_by_generated_location","end_sort_by_generated_location","start_sort_by_original_location","end_sort_by_original_location","Wasm","instance","withMappingCallback","mappingCallback","f","push","pop","e"],"sources":["D:/web/Vue/shop/node_modules/terser/node_modules/source-map/lib/wasm.js"],"sourcesContent":["const readWasm = require(\"../lib/read-wasm\");\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.lastGeneratedColumn = null;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\nlet cachedWasm = null;\n\nmodule.exports = function wasm() {\n  if (cachedWasm) {\n    return cachedWasm;\n  }\n\n  const callbackStack = [];\n\n  cachedWasm = readWasm().then(buffer => {\n      return WebAssembly.instantiate(buffer, {\n        env: {\n          mapping_callback(\n            generatedLine,\n            generatedColumn,\n\n            hasLastGeneratedColumn,\n            lastGeneratedColumn,\n\n            hasOriginal,\n            source,\n            originalLine,\n            originalColumn,\n\n            hasName,\n            name\n          ) {\n            const mapping = new Mapping();\n            // JS uses 1-based line numbers, wasm uses 0-based.\n            mapping.generatedLine = generatedLine + 1;\n            mapping.generatedColumn = generatedColumn;\n\n            if (hasLastGeneratedColumn) {\n              // JS uses inclusive last generated column, wasm uses exclusive.\n              mapping.lastGeneratedColumn = lastGeneratedColumn - 1;\n            }\n\n            if (hasOriginal) {\n              mapping.source = source;\n              // JS uses 1-based line numbers, wasm uses 0-based.\n              mapping.originalLine = originalLine + 1;\n              mapping.originalColumn = originalColumn;\n\n              if (hasName) {\n                mapping.name = name;\n              }\n            }\n\n            callbackStack[callbackStack.length - 1](mapping);\n          },\n\n          start_all_generated_locations_for() { console.time(\"all_generated_locations_for\"); },\n          end_all_generated_locations_for() { console.timeEnd(\"all_generated_locations_for\"); },\n\n          start_compute_column_spans() { console.time(\"compute_column_spans\"); },\n          end_compute_column_spans() { console.timeEnd(\"compute_column_spans\"); },\n\n          start_generated_location_for() { console.time(\"generated_location_for\"); },\n          end_generated_location_for() { console.timeEnd(\"generated_location_for\"); },\n\n          start_original_location_for() { console.time(\"original_location_for\"); },\n          end_original_location_for() { console.timeEnd(\"original_location_for\"); },\n\n          start_parse_mappings() { console.time(\"parse_mappings\"); },\n          end_parse_mappings() { console.timeEnd(\"parse_mappings\"); },\n\n          start_sort_by_generated_location() { console.time(\"sort_by_generated_location\"); },\n          end_sort_by_generated_location() { console.timeEnd(\"sort_by_generated_location\"); },\n\n          start_sort_by_original_location() { console.time(\"sort_by_original_location\"); },\n          end_sort_by_original_location() { console.timeEnd(\"sort_by_original_location\"); },\n        }\n      });\n  }).then(Wasm => {\n    return {\n      exports: Wasm.instance.exports,\n      withMappingCallback: (mappingCallback, f) => {\n        callbackStack.push(mappingCallback);\n        try {\n          f();\n        } finally {\n          callbackStack.pop();\n        }\n      }\n    };\n  }).then(null, e => {\n    cachedWasm = null;\n    throw e;\n  });\n\n  return cachedWasm;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}