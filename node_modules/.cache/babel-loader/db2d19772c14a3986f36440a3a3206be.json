{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nconst util = require(\"./util\");\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\n\n\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const lineA = mappingA.generatedLine;\n  const lineB = mappingB.generatedLine;\n  const columnA = mappingA.generatedColumn;\n  const columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\n\n\nclass MappingList {\n  constructor() {\n    this._array = [];\n    this._sorted = true; // Serves as infimum\n\n    this._last = {\n      generatedLine: -1,\n      generatedColumn: 0\n    };\n  }\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n\n\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  }\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n\n\n  add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n\n      this._array.push(aMapping);\n    }\n  }\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n\n\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n\n      this._sorted = true;\n    }\n\n    return this._array;\n  }\n\n}\n\nexports.MappingList = MappingList;","map":{"version":3,"names":["util","require","generatedPositionAfter","mappingA","mappingB","lineA","generatedLine","lineB","columnA","generatedColumn","columnB","compareByGeneratedPositionsInflated","MappingList","constructor","_array","_sorted","_last","unsortedForEach","aCallback","aThisArg","forEach","add","aMapping","push","toArray","sort","exports"],"sources":["D:/web/Vue/shop/node_modules/terser/node_modules/source-map/lib/mapping-list.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const lineA = mappingA.generatedLine;\n  const lineB = mappingB.generatedLine;\n  const columnA = mappingA.generatedColumn;\n  const columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nclass MappingList {\n  constructor() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  }\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  }\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  }\n}\n\nexports.MappingList = MappingList;\n"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;AACA;;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;EAClD;EACA,MAAMC,KAAK,GAAGF,QAAQ,CAACG,aAAvB;EACA,MAAMC,KAAK,GAAGH,QAAQ,CAACE,aAAvB;EACA,MAAME,OAAO,GAAGL,QAAQ,CAACM,eAAzB;EACA,MAAMC,OAAO,GAAGN,QAAQ,CAACK,eAAzB;EACA,OAAOF,KAAK,GAAGF,KAAR,IAAiBE,KAAK,IAAIF,KAAT,IAAkBK,OAAO,IAAIF,OAA9C,IACAR,IAAI,CAACW,mCAAL,CAAyCR,QAAzC,EAAmDC,QAAnD,KAAgE,CADvE;AAED;AAED;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,WAAN,CAAkB;EAChBC,WAAW,GAAG;IACZ,KAAKC,MAAL,GAAc,EAAd;IACA,KAAKC,OAAL,GAAe,IAAf,CAFY,CAGZ;;IACA,KAAKC,KAAL,GAAa;MAACV,aAAa,EAAE,CAAC,CAAjB;MAAoBG,eAAe,EAAE;IAArC,CAAb;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEQ,eAAe,CAACC,SAAD,EAAYC,QAAZ,EAAsB;IACnC,KAAKL,MAAL,CAAYM,OAAZ,CAAoBF,SAApB,EAA+BC,QAA/B;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEE,GAAG,CAACC,QAAD,EAAW;IACZ,IAAIpB,sBAAsB,CAAC,KAAKc,KAAN,EAAaM,QAAb,CAA1B,EAAkD;MAChD,KAAKN,KAAL,GAAaM,QAAb;;MACA,KAAKR,MAAL,CAAYS,IAAZ,CAAiBD,QAAjB;IACD,CAHD,MAGO;MACL,KAAKP,OAAL,GAAe,KAAf;;MACA,KAAKD,MAAL,CAAYS,IAAZ,CAAiBD,QAAjB;IACD;EACF;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEE,OAAO,GAAG;IACR,IAAI,CAAC,KAAKT,OAAV,EAAmB;MACjB,KAAKD,MAAL,CAAYW,IAAZ,CAAiBzB,IAAI,CAACW,mCAAtB;;MACA,KAAKI,OAAL,GAAe,IAAf;IACD;;IACD,OAAO,KAAKD,MAAZ;EACD;;AAhDe;;AAmDlBY,OAAO,CAACd,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}