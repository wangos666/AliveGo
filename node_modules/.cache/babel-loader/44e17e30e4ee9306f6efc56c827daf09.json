{"ast":null,"code":"\"use strict\";\n\nconst punycode = require(\"punycode\");\n\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\n\nconst {\n  percentEncode,\n  percentDecode\n} = require(\"./urlencoded\");\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return punycode.ucs2.decode(str).length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction utf8PercentEncode(c) {\n  const buf = Buffer.from(c);\n  let str = \"\";\n\n  for (let i = 0; i < buf.length; ++i) {\n    str += percentEncode(buf[i]);\n  }\n\n  return str;\n}\n\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\nconst extraUserinfoPercentEncodeSet = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\n\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\nconst extraFragmentPercentEncodeSet = new Set([32, 34, 60, 62, 96]);\n\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\nconst extraPathPercentEncodeSet = new Set([35, 63, 123, 125]);\n\nfunction isPathPercentEncode(c) {\n  return isFragmentPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\nfunction percentEncodeChar(c, encodeSetPredicate) {\n  const cStr = String.fromCodePoint(c);\n\n  if (encodeSetPredicate(c)) {\n    return utf8PercentEncode(cStr);\n  }\n\n  return cStr;\n}\n\nfunction parseIPv4Number(input) {\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/;\n\n  if (R === 10) {\n    regex = /[^0-9]/;\n  }\n\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return input;\n  }\n\n  const numbers = [];\n\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n\n    const n = parseIPv4Number(part);\n\n    if (n === failure) {\n      return input;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * Math.pow(256, 3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n\n    if (i !== 4) {\n      output = \".\" + output;\n    }\n\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n  input = punycode.ucs2.decode(input);\n\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const seqResult = findLongestZeroSequence(address);\n  const compress = seqResult.idx;\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = percentDecode(Buffer.from(input)).toString();\n  const asciiDomain = domainToASCII(domain);\n\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  const ipv4Host = parseIPv4(asciiDomain);\n\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n\n  return asciiDomain;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  let output = \"\";\n  const decoded = punycode.ucs2.decode(input);\n\n  for (let i = 0; i < decoded.length; ++i) {\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\n  }\n\n  return output;\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n\n      ++currLen;\n    }\n  } // if trailing zeros\n\n\n  if (currLen > maxLen) {\n    maxIdx = currStart;\n    maxLen = currLen;\n  }\n\n  return {\n    idx: maxIdx,\n    len: maxLen\n  };\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  } // IPv6 serializer\n\n\n  if (host instanceof Array) {\n    return \"[\" + serializeIPv6(host) + \"]\";\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n\n  if (result === null) {\n    return failure;\n  }\n\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\n}\n\nfunction shortenPath(url) {\n  const {\n    path\n  } = url;\n\n  if (path.length === 0) {\n    return;\n  }\n\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n      cannotBeABaseURL: false\n    };\n    const res = trimControlChars(this.input);\n\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n\n  this.input = res;\n  this.state = stateOverride || \"scheme start\";\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n  this.input = punycode.ucs2.decode(this.input);\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c); // exec state machine\n\n    const ret = this[\"parse \" + this.state](c, cStr);\n\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\n        return false;\n      }\n    }\n\n    this.url.scheme = this.buffer;\n\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n\n      return false;\n    }\n\n    this.buffer = \"\";\n\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n\n  if (isNaN(c)) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n  } else if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (c === 63) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n\n    if (this.atFlag) {\n      this.buffer = \"%40\" + this.buffer;\n    }\n\n    this.atFlag = true; // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n\n    const len = countSymbols(this.buffer);\n\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\n\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] = URLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    --this.pointer;\n\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" && (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n\n      if (port > Math.pow(2, 16) - 1) {\n        this.parseError = true;\n        return failure;\n      }\n\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n\n    if (this.stateOverride) {\n      return false;\n    }\n\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 && isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) && (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    if (isNaN(c)) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n    } else if (c === 63) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\" && !startsWithWindowsDriveLetter(this.input, this.pointer)) {\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      } else {\n        this.url.host = this.base.host;\n      }\n    }\n\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n\n      if (host === failure) {\n        return failure;\n      }\n\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"path\";\n\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n\n    if (c !== 47) {\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        if (this.url.host !== \"\" && this.url.host !== null) {\n          this.parseError = true;\n          this.url.host = \"\";\n        }\n\n        this.buffer = this.buffer[0] + \":\";\n      }\n\n      this.url.path.push(this.buffer);\n    }\n\n    this.buffer = \"\";\n\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\n        this.parseError = true;\n        this.url.path.shift();\n      }\n    }\n\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (isNaN(c) || !this.stateOverride && c === 35) {\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n      this.encodingOverride = \"utf-8\";\n    }\n\n    const buffer = Buffer.from(this.buffer); // TODO: Use encoding override instead\n\n    for (let i = 0; i < buffer.length; ++i) {\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E || buffer[i] === 0x27 && isSpecial(this.url)) {\n        this.url.query += percentEncode(buffer[i]);\n      } else {\n        this.url.query += String.fromCodePoint(buffer[i]);\n      }\n    }\n\n    this.buffer = \"\";\n\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (isNaN(c)) {// do nothing\n  } else if (c === 0x0) {\n    this.parseError = true;\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += percentEncodeChar(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = url.scheme + \":\";\n\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n\n      if (url.password !== \"\") {\n        output += \":\" + url.password;\n      }\n\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += \":\" + url.port;\n    }\n  } else if (url.host === null && url.scheme === \"file\") {\n    output += \"//\";\n  }\n\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    for (const string of url.path) {\n      output += \"/\" + string;\n    }\n  }\n\n  if (url.query !== null) {\n    output += \"?\" + url.query;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += \"#\" + url.fragment;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = tuple.scheme + \"://\";\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += \":\" + tuple.port;\n  }\n\n  return result;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = \"\";\n  const decoded = punycode.ucs2.decode(username);\n\n  for (let i = 0; i < decoded.length; ++i) {\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = \"\";\n  const decoded = punycode.ucs2.decode(password);\n\n  for (let i = 0; i < decoded.length; ++i) {\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.serializeHost = serializeHost;\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  } // We don't handle blobs, so this just delegates:\n\n\n  return module.exports.basicURLParse(input, {\n    baseURL: options.baseURL,\n    encodingOverride: options.encodingOverride\n  });\n};","map":{"version":3,"names":["punycode","require","tr46","infra","percentEncode","percentDecode","specialSchemes","ftp","file","http","https","ws","wss","failure","Symbol","countSymbols","str","ucs2","decode","length","at","input","idx","c","isNaN","undefined","String","fromCodePoint","isSingleDot","buffer","toLowerCase","isDoubleDot","isWindowsDriveLetterCodePoints","cp1","cp2","isASCIIAlpha","isWindowsDriveLetterString","string","codePointAt","isNormalizedWindowsDriveLetterString","containsForbiddenHostCodePoint","search","containsForbiddenHostCodePointExcludingPercent","isSpecialScheme","scheme","isSpecial","url","isNotSpecial","defaultPort","utf8PercentEncode","buf","Buffer","from","i","isC0ControlPercentEncode","extraUserinfoPercentEncodeSet","Set","isUserinfoPercentEncode","isPathPercentEncode","has","extraFragmentPercentEncodeSet","isFragmentPercentEncode","extraPathPercentEncodeSet","percentEncodeChar","encodeSetPredicate","cStr","parseIPv4Number","R","charAt","substring","regex","test","parseInt","parseIPv4","parts","split","pop","numbers","part","n","push","Math","pow","ipv4","counter","serializeIPv4","address","output","floor","parseIPv6","pieceIndex","compress","pointer","value","isASCIIHex","numbersSeen","ipv4Piece","isASCIIDigit","number","swaps","temp","serializeIPv6","seqResult","findLongestZeroSequence","ignore0","separator","toString","parseHost","isNotSpecialArg","parseOpaqueHost","domain","asciiDomain","domainToASCII","ipv4Host","decoded","arr","maxIdx","maxLen","currStart","currLen","len","serializeHost","host","Array","beStrict","result","toASCII","checkBidi","checkHyphens","checkJoiners","useSTD3ASCIIRules","verifyDNSLength","trimControlChars","replace","trimTabAndNewline","shortenPath","path","isNormalizedWindowsDriveLetter","includesCredentials","username","password","cannotHaveAUsernamePasswordPort","cannotBeABaseURL","URLStateMachine","base","encodingOverride","stateOverride","parseError","port","query","fragment","res","state","atFlag","arrFlag","passwordTokenSeenFlag","ret","prototype","parseSchemeStart","parseScheme","isASCIIAlphanumeric","parseNoScheme","slice","parseSpecialRelativeOrAuthority","parsePathOrAuthority","parseRelative","parseRelativeSlash","parseSpecialAuthoritySlashes","parseSpecialAuthorityIgnoreSlashes","parseAuthority","codePoint","encodedCodePoints","parseHostName","parsePort","fileOtherwiseCodePoints","startsWithWindowsDriveLetter","parseFile","parseFileSlash","parseFileHost","parsePathStart","parsePath","shift","parseCannotBeABaseURLPath","parseQuery","parseFragment","serializeURL","excludeFragment","serializeOrigin","tuple","module","exports","serializeURLOrigin","parseURL","e","basicURLParse","options","usm","baseURL","setTheUsername","setThePassword","serializeInteger","integer"],"sources":["D:/web/Vue/shop/node_modules/terser/node_modules/whatwg-url/lib/url-state-machine.js"],"sourcesContent":["\"use strict\";\nconst punycode = require(\"punycode\");\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { percentEncode, percentDecode } = require(\"./urlencoded\");\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return punycode.ucs2.decode(str).length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction utf8PercentEncode(c) {\n  const buf = Buffer.from(c);\n\n  let str = \"\";\n\n  for (let i = 0; i < buf.length; ++i) {\n    str += percentEncode(buf[i]);\n  }\n\n  return str;\n}\n\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\nconst extraUserinfoPercentEncodeSet =\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\nconst extraFragmentPercentEncodeSet = new Set([32, 34, 60, 62, 96]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\nconst extraPathPercentEncodeSet = new Set([35, 63, 123, 125]);\nfunction isPathPercentEncode(c) {\n  return isFragmentPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\nfunction percentEncodeChar(c, encodeSetPredicate) {\n  const cStr = String.fromCodePoint(c);\n\n  if (encodeSetPredicate(c)) {\n    return utf8PercentEncode(cStr);\n  }\n\n  return cStr;\n}\n\nfunction parseIPv4Number(input) {\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/;\n  if (R === 10) {\n    regex = /[^0-9]/;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return input;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return input;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * Math.pow(256, 3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = \".\" + output;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = punycode.ucs2.decode(input);\n\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const seqResult = findLongestZeroSequence(address);\n  const compress = seqResult.idx;\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = percentDecode(Buffer.from(input)).toString();\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  const ipv4Host = parseIPv4(asciiDomain);\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n\n  return asciiDomain;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  let output = \"\";\n  const decoded = punycode.ucs2.decode(input);\n  for (let i = 0; i < decoded.length; ++i) {\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\n  }\n  return output;\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    maxIdx = currStart;\n    maxLen = currLen;\n  }\n\n  return {\n    idx: maxIdx,\n    len: maxLen\n  };\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return \"[\" + serializeIPv6(host) + \"]\";\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null) {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n\n      cannotBeABaseURL: false\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = punycode.ucs2.decode(this.input);\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[\"parse \" + this.state](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (isNaN(c)) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n  } else if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (c === 63) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\n\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = \"%40\" + this.buffer;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > Math.pow(2, 16) - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    if (isNaN(c)) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n    } else if (c === 63) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\" &&\n        !startsWithWindowsDriveLetter(this.input, this.pointer)) {\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      } else {\n        this.url.host = this.base.host;\n      }\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== 47) {\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\n      (!this.stateOverride && (c === 63 || c === 35))) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\n               !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        if (this.url.host !== \"\" && this.url.host !== null) {\n          this.parseError = true;\n          this.url.host = \"\";\n        }\n        this.buffer = this.buffer[0] + \":\";\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\n        this.parseError = true;\n        this.url.path.shift();\n      }\n    }\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n\n    if (c === 37 &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n      this.encodingOverride = \"utf-8\";\n    }\n\n    const buffer = Buffer.from(this.buffer); // TODO: Use encoding override instead\n    for (let i = 0; i < buffer.length; ++i) {\n      if (buffer[i] < 0x21 ||\n          buffer[i] > 0x7E ||\n          buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E ||\n          (buffer[i] === 0x27 && isSpecial(this.url))) {\n        this.url.query += percentEncode(buffer[i]);\n      } else {\n        this.url.query += String.fromCodePoint(buffer[i]);\n      }\n    }\n\n    this.buffer = \"\";\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (isNaN(c)) { // do nothing\n  } else if (c === 0x0) {\n    this.parseError = true;\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += percentEncodeChar(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = url.scheme + \":\";\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += \":\" + url.password;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += \":\" + url.port;\n    }\n  } else if (url.host === null && url.scheme === \"file\") {\n    output += \"//\";\n  }\n\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    for (const string of url.path) {\n      output += \"/\" + string;\n    }\n  }\n\n  if (url.query !== null) {\n    output += \"?\" + url.query;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += \"#\" + url.fragment;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = tuple.scheme + \"://\";\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += \":\" + tuple.port;\n  }\n\n  return result;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = \"\";\n  const decoded = punycode.ucs2.decode(username);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = \"\";\n  const decoded = punycode.ucs2.decode(password);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}